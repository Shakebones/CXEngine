/*
 * File name - MultiTexture.ps
 * Author - CuiXue
 * Updated date - 2013.3.1
 * Desc - 
 *
 * 关于对融合公式的说明：
 * 常规的思路一般是：
 * 最终显示的颜色 = 对纹理1采样的结果 * 0.5f + 对纹理2采样的结果 * 0.5f
 * 
 * Raster Tek 作者的公式：
 * 最终显示的颜色 = 对我呢里1采样的结果 * 对纹理2采样的结果 * 伽马矫正值
 *
 * 原因：
 * The reason being is that the pixel color presented to us has been corrected to the gamma of the monitor. 
 * This makes the pixel values from 0.0 to 1.0 follow a non-linear curve. Therefore we need gamma correction
 * when working in the pixel shader to deal with non-linear color values.
 */
 cbuffer NumberTextures
 {
	int numberTextures;
 };

 struct PixelInputType
 {
	float4 position : SV_POSITION;
	float2 tex		: TEXCOORD0;
 };

 Texture2D textures[2];
 SamplerState samplerState;

 float4 MultiTexturePS(PixelInputType input) : SV_TARGET
 {
	float4 color_of_tex[2];
	float4 after_blend_color;

	color_of_tex[0] = textures[0].Sample(samplerState, input.tex);
	color_of_tex[1] = textures[1].Sample(samplerState, input.tex);

	after_blend_color = color_of_tex[0] * color_of_tex[1] * 2.0f;

	after_blend_color = saturate(after_blend_color);

	return after_blend_color;
 }